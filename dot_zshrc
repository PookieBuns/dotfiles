# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# direnv
eval "$(direnv hook zsh)"
# ensure compatibility tmux <-> direnv
if [ -n "$TMUX" ] && [ -n "$DIRENV_DIR" ]; then
    direnv reload
fi

# allow extended modifier keys in tmux
if [ -n "$TMUX" ]; then
    precmd() { printf '\033[>4;1m' }
fi

# aliases
if [ -f ~/.aliases ]; then
    . ~/.aliases
fi

# Save command history
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

# zsh-autosuggestions
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
# this is the ctrl-enter binding
bindkey '3;5u' autosuggest-accept
# for some reason tmux swallows the 3
bindkey ';5u' autosuggest-accept
bindkey ';5;13~' autosuggest-accept

# fzf
eval "$(fzf --zsh)"
export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

_fzf_compgen_path() {
    fd "$1"
}

_fzf_compgen_dir() {
    fd --type=d "$1"
}

_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'tree -C {} | head -200'   "$@" ;;
    export|unset) fzf --preview "eval 'echo \$'{}"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview 'bat -n --color=always {}' "$@" ;;
  esac
}

# zoxide
eval "$(zoxide init zsh)"

# starship
eval "$(starship init zsh)"

# fzf-sesh
source ~/.local/share/fzf-sesh/bin/fzf-sesh
export PATH=$PATH:$HOME/.local/share/fzf-sesh/bin

# git using fugitive
git() {
    if [[ -z "$1" ]]; then
        # check if we are in a git repo
        if ! git rev-parse --is-inside-work-tree 1> /dev/null; then
            return 1
        fi
        command nvim -c :G
    else
        command git "$@"
    fi
}

# ripgrep
export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"

# start tmux if not already running
if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
    sesh connect .
fi
